"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74854],{89588:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"auto-docs/services_task_service/TaskService/getTasksByUser","title":"getTasksByUser method","description":"Future&lt;void> getTasksByUser","source":"@site/docs/auto-docs/services_task_service/TaskService/getTasksByUser.md","sourceDirName":"auto-docs/services_task_service/TaskService","slug":"/auto-docs/services_task_service/TaskService/getTasksByUser","permalink":"/docs/auto-docs/services_task_service/TaskService/getTasksByUser","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/services_task_service/TaskService/getTasksByUser.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"editTask method","permalink":"/docs/auto-docs/services_task_service/TaskService/editTask"},"next":{"title":"getTasksForEvent method","permalink":"/docs/auto-docs/services_task_service/TaskService/getTasksForEvent"}}');var a=t(74848),n=t(28453);const i={},o="getTasksByUser method",c={},d=[{value:"Implementation",id:"implementation",level:2}];function u(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"gettasksbyuser-method",children:"getTasksByUser method"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> getTasksByUser\n()"]}),"\n",(0,a.jsx)("p",{children:"This function is used to fetch and return all tasks added by the current user."}),"\n",(0,a.jsx)(s.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-dart",children:"Future<void> getTasksByUser() async \\{\n  await _databaseMutationFunctions\n      .refreshAccessToken(_userConfig.currentUser.refreshToken!);\n  final res = await _databaseMutationFunctions\n      .gqlNonAuthQuery(TaskQueries.userTasks(_userConfig.currentUser.id!));\n\n  if (res != null) \\{\n    _tasks.clear();\n    final tasksList = res.data!['tasksByUser'] as List;\n    tasksList.forEach((task) \\{\n      _tasks.add(Task.fromJson(task as Map<String, dynamic>));\n    \\});\n  \\}\n\\}\n"})})]})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var r=t(96540);const a={},n=r.createContext(a);function i(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);