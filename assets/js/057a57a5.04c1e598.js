"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[36732],{32189:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>d,default:()=>i,frontMatter:()=>n,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"auto-docs/models_user_user_info/UserAdapter/hashCode","title":"hashCode","description":"1.  @override","source":"@site/docs/auto-docs/models_user_user_info/UserAdapter/hashCode.md","sourceDirName":"auto-docs/models_user_user_info/UserAdapter","slug":"/auto-docs/models_user_user_info/UserAdapter/hashCode","permalink":"/docs/auto-docs/models_user_user_info/UserAdapter/hashCode","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/models_user_user_info/UserAdapter/hashCode.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"UserAdapter","permalink":"/docs/auto-docs/models_user_user_info/UserAdapter/"},"next":{"title":"operator_equals","permalink":"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals"}}');var a=t(74848),o=t(28453);const n={},d="hashCode property",h={},l=[{value:"Implementation",id:"implementation",level:2},{value:"UserAdapter class",id:"useradapter-class",level:5}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{children:(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"hashcode-property",children:"hashCode property"})})}),"\n",(0,a.jsx)("div",{children:(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["@",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"})]}),"\n"]})}),"\n",(0,a.jsxs)(s.p,{children:["[",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-core/int-class.html",children:"int"}),"]\nget hashCode"]}),"\n",(0,a.jsx)(s.p,{children:"override"}),"\n",(0,a.jsx)(s.p,{children:"The hash code for this object."}),"\n",(0,a.jsxs)(s.p,{children:["A hash code is a single integer which represents the state of the object\nthat affects ",(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals",children:"operator\n=="}),"\ncomparisons."]}),"\n",(0,a.jsxs)(s.p,{children:["All objects have hash codes. The default hash code implemented by\n",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html",children:"Object"}),"\nrepresents only the identity of the object, the same way as the default\n",(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals",children:"operator\n=="}),"\nimplementation only considers objects equal if they are identical (see\n",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-core/identityHashCode.md",children:"identityHashCode"}),")."]}),"\n",(0,a.jsxs)(s.p,{children:["If ",(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals",children:"operator\n=="})," is\noverridden to use the object state instead, the hash code must also be\nchanged to represent that state, otherwise the object cannot be used in\nhash based data structures like the default\n",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-core/Set-class.html",children:"Set"})," and\n",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-core/Map-class.html",children:"Map"}),"\nimplementations."]}),"\n",(0,a.jsxs)(s.p,{children:["Hash codes must be the same for objects that are equal to each other\naccording to ",(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals",children:"operator\n=="}),". The\nhash code of an object should only change if the object changes in a way\nthat affects equality. There are no further requirements for the hash\ncodes. They need not be consistent between executions of the same\nprogram and there are no distribution guarantees."]}),"\n",(0,a.jsxs)(s.p,{children:["Objects that are not equal are allowed to have the same hash code. It is\neven technically allowed that all instances have the same hash code, but\nif clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like\n",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-collection/HashSet-class.html",children:"HashSet"}),"\nor\n",(0,a.jsx)(s.a,{href:"https://api.flutter.dev/flutter/dart-collection/HashMap-class.html",children:"HashMap"}),"."]}),"\n",(0,a.jsxs)(s.p,{children:["If a subclass overrides\n",(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter/hashCode",children:"hashCode"}),", it\nshould override the ",(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals",children:"operator\n=="}),"\noperator as well to maintain consistency."]}),"\n",(0,a.jsx)(s.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-language-dart",children:"@override\nint get hashCode => typeId.hashCode;\n"})}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"/docs/auto-docs/",children:"talawa"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"../../models_user_user_info/",children:"user_info"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"/docs/auto-docs/models_user_user_info/UserAdapter-class",children:"UserAdapter"})}),"\n",(0,a.jsx)(s.li,{children:"hashCode property"}),"\n"]}),"\n",(0,a.jsx)(s.h5,{id:"useradapter-class",children:"UserAdapter class"})]})}function i(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>d});var r=t(96540);const a={},o=r.createContext(a);function n(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);