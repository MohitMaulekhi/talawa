"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28104],{19530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/createEvent","title":"createEvent method","description":"Future&lt;void> createEvent","source":"@site/docs/auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/createEvent.md","sourceDirName":"auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel","slug":"/auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/createEvent","permalink":"/docs/auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/createEvent","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/createEvent.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"buildUserList method","permalink":"/docs/auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/buildUserList"},"next":{"title":"descriptionFocus property","permalink":"/docs/auto-docs/view_model_after_auth_view_models_event_view_models_create_event_view_model/CreateEventViewModel/descriptionFocus"}}');var i=n(74848),o=n(28453);const r={},s="createEvent method",d={},l=[{value:"Implementation",id:"implementation",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"createevent-method",children:"createEvent method"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> createEvent\n()"]}),"\n",(0,i.jsx)("p",{children:"This function is used to create the event for the organization."}),"\n",(0,i.jsxs)("p",{children:["The function uses ",(0,i.jsx)(t.code,{children:"dartdatabase_mutation_functions"})," services to call the graphQL mutation\nfor creating an event and passes the required variables for the event."]}),"\n",(0,i.jsxs)("p",{children:[(0,i.jsx)("strong",{children:"params"}),":\nNone"]}),"\n",(0,i.jsxs)("p",{children:[(0,i.jsx)("strong",{children:"returns"}),":"]}),"\n",(0,i.jsx)("ul",{children:(0,i.jsxs)("li",{children:[(0,i.jsx)(t.code,{children:"dartFuture&lt;void&gt;"}),": Asynchronous function for creating event"]})}),"\n",(0,i.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"Future<void> createEvent() async \\{\n  titleFocus.unfocus();\n  locationFocus.unfocus();\n  descriptionFocus.unfocus();\n  validate = AutovalidateMode.always;\n  if (formKey.currentState!.validate()) \\{\n    validate = AutovalidateMode.disabled;\n\n    // variables initialisation\n    final DateTime startDate = eventStartDate;\n    final DateTime endDate = eventEndDate;\n    final DateTime startTime = DateTime(\n      startDate.year,\n      startDate.month,\n      startDate.day,\n      eventStartTime.hour,\n      eventStartTime.minute,\n    );\n    final DateTime endTime = DateTime(\n      endDate.year,\n      endDate.month,\n      endDate.day,\n      eventEndTime.hour,\n      eventEndTime.minute,\n    );\n\n    // all required data for creating an event\n    final Map<String, dynamic> variables = \\{\n      'startDate': DateFormat('yyyy-MM-dd').format(startDate),\n      'endDate': DateFormat('yyyy-MM-dd').format(endDate),\n      'organizationId': _currentOrg.id,\n      'title': eventTitleTextController.text,\n      'description': eventDescriptionTextController.text,\n      'location': eventLocationTextController.text,\n      'isPublic': isPublicSwitch,\n      'isRegisterable': isRegisterableSwitch,\n      'recurring': false,\n      'allDay': false,\n      'startTime': '$\\{DateFormat('HH:mm:ss').format(startTime)\\}Z',\n      'endTime': '$\\{DateFormat('HH:mm:ss').format(endTime)\\}Z',\n      if (latitude != null) 'latitude': latitude,\n      if (longitude != null) 'longitude': longitude,\n    \\};\n\n    navigationService.pushDialog(\n      const CustomProgressDialog(key: Key('EventCreationProgress')),\n    );\n    final tokenResult = await databaseFunctions\n        .refreshAccessToken(userConfig.currentUser.refreshToken!);\n    print(tokenResult);\n    // invoke the `gqlAuthMutation` function of `databaseFunctions`\n    // service along with the mutation query and variable map.\n    final result = await databaseFunctions.gqlAuthMutation(\n      EventQueries().addEvent(),\n      variables: variables,\n    );\n    navigationService.pop();\n    if (result != null) \\{\n      navigationService.pop();\n\n      await _eventService.getEvents();\n    \\}\n  \\}\n\\}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(96540);const i={},o=a.createContext(i);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);