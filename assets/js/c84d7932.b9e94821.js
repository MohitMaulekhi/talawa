"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[48341],{94531:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"auto-docs/views_pre_auth_screens_set_url/SetUrl/createState","title":"createState method","description":"- @override","source":"@site/docs/auto-docs/views_pre_auth_screens_set_url/SetUrl/createState.md","sourceDirName":"auto-docs/views_pre_auth_screens_set_url/SetUrl","slug":"/auto-docs/views_pre_auth_screens_set_url/SetUrl/createState","permalink":"/docs/auto-docs/views_pre_auth_screens_set_url/SetUrl/createState","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/views_pre_auth_screens_set_url/SetUrl/createState.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SetUrl constructor","permalink":"/docs/auto-docs/views_pre_auth_screens_set_url/SetUrl/"},"next":{"title":"uri property","permalink":"/docs/auto-docs/views_pre_auth_screens_set_url/SetUrl/uri"}}');var a=r(74848),n=r(28453);const i={},l="createState method",c={},o=[{value:"Implementation",id:"implementation",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"createstate-method",children:"createState method"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["@",(0,a.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"_SetUrlState createState\n()"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:(0,a.jsx)("span",{class:"feature",children:"override"})})}),"\n",(0,a.jsx)("p",{children:"Creates the mutable state for this widget at a given location in the tree."}),"\n",(0,a.jsxs)("p",{children:["Subclasses should override this method to return a newly created\ninstance of their associated ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/widgets/State-class.html",children:"State"})," subclass:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart@override",children:"State&lt;SomeWidget&gt; createState() =&gt; _SomeWidgetState();\n"})}),"\n",(0,a.jsxs)("p",{children:["The framework can call this method multiple times over the lifetime of\na ",(0,a.jsx)(t.code,{children:"dartStatefulWidget"}),". For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/widgets/State-class.html",children:"State"})," object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call ",(0,a.jsx)("a",{href:"../../views_pre_auth_screens_set_url/SetUrl/createState.md",children:"createState"}),"\nagain to create a fresh ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/widgets/State-class.html",children:"State"})," object, simplifying the lifecycle of\n",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/widgets/State-class.html",children:"State"})," objects."]}),"\n",(0,a.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"@override\n_SetUrlState createState() => _SetUrlState();\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var s=r(96540);const a={},n=s.createContext(a);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);