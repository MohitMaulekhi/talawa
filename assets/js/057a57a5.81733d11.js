"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[36732],{32189:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>c,frontMatter:()=>n,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"auto-docs/models_user_user_info/UserAdapter/hashCode","title":"hashCode property","description":"Annotations","source":"@site/docs/auto-docs/models_user_user_info/UserAdapter/hashCode.md","sourceDirName":"auto-docs/models_user_user_info/UserAdapter","slug":"/auto-docs/models_user_user_info/UserAdapter/hashCode","permalink":"/docs/auto-docs/models_user_user_info/UserAdapter/hashCode","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/models_user_user_info/UserAdapter/hashCode.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"UserAdapter constructor","permalink":"/docs/auto-docs/models_user_user_info/UserAdapter/"},"next":{"title":"operator == method","permalink":"/docs/auto-docs/models_user_user_info/UserAdapter/operator_equals"}}');var a=s(74848),o=s(28453);const n={},d="hashCode property",h={},i=[{value:"Implementation",id:"implementation",level:2}];function l(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"hashcode-property",children:"hashCode property"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Annotations"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["@",(0,a.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"}),"\n",(0,a.jsx)(t.a,{href:"https://api.flutter.dev/flutter/dart-core/int-class.html",children:"int"})," hashCode"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:(0,a.jsx)("span",{class:"feature",children:"override"})})}),"\n",(0,a.jsx)("p",{children:"The hash code for this object."}),"\n",(0,a.jsxs)("p",{children:["A hash code is a single integer which represents the state of the object\nthat affects ",(0,a.jsx)("a",{href:"../../models_user_user_info/UserAdapter/operator_equals.md",children:"operator =="})," comparisons."]}),"\n",(0,a.jsxs)("p",{children:["All objects have hash codes.\nThe default hash code implemented by ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html",children:"Object"}),"\nrepresents only the identity of the object,\nthe same way as the default ",(0,a.jsx)("a",{href:"../../models_user_user_info/UserAdapter/operator_equals.md",children:"operator =="})," implementation only considers objects\nequal if they are identical (see ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-core/identityHashCode.html",children:"identityHashCode"}),")."]}),"\n",(0,a.jsxs)("p",{children:["If ",(0,a.jsx)("a",{href:"../../models_user_user_info/UserAdapter/operator_equals.md",children:"operator =="})," is overridden to use the object state instead,\nthe hash code must also be changed to represent that state,\notherwise the object cannot be used in hash based data structures\nlike the default ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-core/Set-class.html",children:"Set"})," and ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-core/Map-class.html",children:"Map"})," implementations."]}),"\n",(0,a.jsxs)("p",{children:["Hash codes must be the same for objects that are equal to each other\naccording to ",(0,a.jsx)("a",{href:"../../models_user_user_info/UserAdapter/operator_equals.md",children:"operator =="}),".\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees."]}),"\n",(0,a.jsxs)("p",{children:["Objects that are not equal are allowed to have the same hash code.\nIt is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often,\nit may reduce the efficiency of hash-based data structures\nlike ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-collection/HashSet-class.html",children:"HashSet"})," or ",(0,a.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-collection/HashMap-class.html",children:"HashMap"}),"."]}),"\n",(0,a.jsxs)("p",{children:["If a subclass overrides ",(0,a.jsx)("a",{href:"../../models_user_user_info/UserAdapter/hashCode.md",children:"hashCode"}),", it should override the\n",(0,a.jsx)("a",{href:"../../models_user_user_info/UserAdapter/operator_equals.md",children:"operator =="})," operator as well to maintain consistency."]}),"\n",(0,a.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"@override\nint get hashCode => typeId.hashCode;\n"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>d});var r=s(96540);const a={},o=r.createContext(a);function n(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);