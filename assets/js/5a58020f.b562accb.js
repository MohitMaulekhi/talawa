"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[22942],{95418:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>d,default:()=>o,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"auto-docs/services_caching_base_feed_manager/BaseFeedManager-class","title":"BaseFeedManager-class","description":"abstract \\"This type can not be directly constructed.\\")","source":"@site/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager-class.md","sourceDirName":"auto-docs/services_caching_base_feed_manager","slug":"/auto-docs/services_caching_base_feed_manager/BaseFeedManager-class","permalink":"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager-class","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager-class.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"BaseFeedManager-class-sidebar","permalink":"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager-class-sidebar"},"next":{"title":"services_caching_base_feed_manager-library-sidebar","permalink":"/docs/auto-docs/services_caching_base_feed_manager/services_caching_base_feed_manager-library-sidebar"}}');var r=t(74848),n=t(28453);const c={},d="BaseFeedManager<[T>] class abstract",i={},h=[{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Operators",id:"operators",level:2},{value:"base_feed_manager library",id:"base_feed_manager-library",level:5}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{children:(0,r.jsx)(a.header,{children:(0,r.jsxs)(a.h1,{id:"basefeedmanagert-class-abstract",children:["BaseFeedManager<[T>] class ",(0,r.jsx)(a.a,{href:"https://dart.dev/language/class-modifiers#abstract",title:"This type can not be directly constructed.",children:"abstract"})]})})}),"\n",(0,r.jsxs)(a.p,{children:["An abstract base class for managing a feed of type ",(0,r.jsx)(a.code,{children:"T"})," with caching and\nonline data fetching capabilities."]}),"\n",(0,r.jsx)(a.p,{children:"This class provides methods for initializing a cache, loading cached\ndata, saving data to cache, and fetching new data from an API. It also\nhandles automatic cache refreshing when online."}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"params"}),":"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"cacheKey"}),": A unique key for identifying the cache box in Hive."]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"methods"}),":"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"loadCachedData"}),": Loads the data cached in Hive for the specified\n",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/cacheKey",children:"cacheKey"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"saveDataToCache"}),": Saves a list of data to the cache, clearing any\nexisting data in the process."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"fetchDataFromApi"}),": Abstract method to be implemented by subclasses\nfor fetching data from an API."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"getNewFeedAndRefreshCache"}),": Fetches new data from the API if\nonline, updates the cache, and returns the data. If offline, it\nloads and returns cached data."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Implementers"}),"\n",(0,r.jsxs)(a.p,{children:[":   -   ",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_event_service/EventService-class",children:"EventService"})]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_post_service/PostService-class",children:"PostService"})}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/",children:"BaseFeedManager"}),"][([[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/String-class.md",children:"String"}),"] cacheKey])]"]}),"\n",(0,r.jsx)(a.p,{children:":"}),"\n",(0,r.jsx)(a.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/cacheKey",children:"cacheKey"}),"] [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/String-class.html",children:"String"}),"]\n:   feed cacheBox key.\n::: features\nfinal\n:::"]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Object/hashCode.html",children:"hashCode"}),"] [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/int-class.html",children:"int"}),"]\n:   The hash code for this object.\n::: features\nno setterinherited\n:::"]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Object/runtimeType.html",children:"runtimeType"}),"] [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Type-class.html",children:"Type"}),"]\n:   A representation of the runtime type of the object.\n::: features\nno setterinherited\n:::"]}),"\n",(0,r.jsx)(a.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/fetchDataFromApi",children:"fetchDataFromApi"}),"][ [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Future-class.html",children:"Future"}),"[<[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/List-class.html",children:"List"}),"<[T>]]>]] ]\n:   Abstract method to be implemented by subclasses to fetch data from\nan API."]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/getNewFeedAndRefreshCache",children:"getNewFeedAndRefreshCache"}),"][ [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Future-class.html",children:"Future"}),"[<[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/List-class.html",children:"List"}),"<[T>]]>]] ]\n:   Fetches new data from the API if online, updates the cache, and\nreturns the data."]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/loadCachedData",children:"loadCachedData"}),"][ [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Future-class.html",children:"Future"}),"[<[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/List-class.html",children:"List"}),"<[T>]]>]] ]\n:   Loads the data cached in Hive."]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Object/noSuchMethod.html",children:"noSuchMethod"}),"][([[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Invocation-class.md",children:"Invocation"}),"] invocation]) \u2192 dynamic ]\n:   Invoked when a nonexistent method or property is accessed.\n::: features\ninherited\n:::"]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"/docs/auto-docs/services_caching_base_feed_manager/BaseFeedManager/saveDataToCache",children:"saveDataToCache"}),"][([[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/List-class.md",children:"List"}),"<[T>]] data]) [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Future-class.html",children:"Future"}),"<[void>]] ]\n:   Saves a list of data to the cache, replacing any existing data."]}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Object/toString.html",children:"toString"}),"][ [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/String-class.html",children:"String"}),"] ]\n:   A string representation of this object.\n::: features\ninherited\n:::"]}),"\n",(0,r.jsx)(a.h2,{id:"operators",children:"Operators"}),"\n",(0,r.jsxs)(a.p,{children:["[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Object/operator_equals.html",children:"operator =="}),"][([[",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/Object-class.md",children:"Object"}),"] other]) [\u2192 ",(0,r.jsx)(a.a,{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",children:"bool"}),"] ]\n:   The equality operator.\n::: features\ninherited\n:::"]}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"/docs/auto-docs/",children:"talawa"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"../services_caching_base_feed_manager/",children:"base_feed_manager"})}),"\n",(0,r.jsx)(a.li,{children:"BaseFeedManager<[T>] class"}),"\n"]}),"\n",(0,r.jsx)(a.h5,{id:"base_feed_manager-library",children:"base_feed_manager library"})]})}function o(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>c,x:()=>d});var s=t(96540);const r={},n=s.createContext(r);function c(e){const a=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(n.Provider,{value:a},e.children)}}}]);