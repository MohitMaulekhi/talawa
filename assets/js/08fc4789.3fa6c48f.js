"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51520],{86720:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"auto-docs/main/setUpFirebaseMessaging","title":"setUpFirebaseMessaging function","description":"Future&lt;void> setUpFirebaseMessaging","source":"@site/docs/auto-docs/main/setUpFirebaseMessaging.md","sourceDirName":"auto-docs/main","slug":"/auto-docs/main/setUpFirebaseMessaging","permalink":"/docs/auto-docs/main/setUpFirebaseMessaging","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/main/setUpFirebaseMessaging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"setUpFirebaseKeys function","permalink":"/docs/auto-docs/main/setUpFirebaseKeys"},"next":{"title":"ChatListTileDataModel constructor","permalink":"/docs/auto-docs/models_chats_chat_list_tile_data_model/ChatListTileDataModel/"}}');var i=s(74848),a=s(28453);const o={},r="setUpFirebaseMessaging function",c={},d=[{value:"Implementation",id:"implementation",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"setupfirebasemessaging-function",children:"setUpFirebaseMessaging function"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://api.flutter.dev/flutter/dart-async/Future-class.html",children:"Future"}),"<void> setUpFirebaseMessaging\n()"]}),"\n",(0,i.jsx)("p",{children:"Set up firebase instance, enbables messaging,listens to icoming messages."}),"\n",(0,i.jsxs)("p",{children:[(0,i.jsx)("strong",{children:"params"}),":\nNone"]}),"\n",(0,i.jsxs)("p",{children:[(0,i.jsx)("strong",{children:"returns"}),":"]}),"\n",(0,i.jsx)("ul",{children:(0,i.jsxs)("li",{children:[(0,i.jsx)(n.code,{children:"dartFuture&lt;void&gt;"}),": promise that will be fulfilled Firebase is setted up."]})}),"\n",(0,i.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> setUpFirebaseMessaging() async \\{\n  /// Set the background messaging handler early on, as a named top-level function\n  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);\n\n  // Update the iOS foreground notification presentation options to allow heads up notifications.\n  await FirebaseMessaging.instance.setForegroundNotificationPresentationOptions(\n    alert: true,\n    badge: true,\n    sound: true,\n  );\n\n  FirebaseMessaging.instance\n      .getInitialMessage()\n      .then((RemoteMessage? message) \\{\\});\n\n  FirebaseMessaging.onMessage.listen((RemoteMessage message) \\{\n    final RemoteNotification? notification = message.notification;\n    final AndroidNotification? android = message.notification?.android;\n    if (notification != null && android != null && !kIsWeb) \\{\n      flutterLocalNotificationsPlugin.show(\n        notification.hashCode,\n        notification.title,\n        notification.body,\n        NotificationDetails(\n          android: AndroidNotificationDetails(\n            channel.id,\n            channel.name,\n            channelDescription: channel.description,\n            icon: 'launch_background',\n          ),\n        ),\n      );\n    \\}\n  \\});\n\n  FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) \\{\\});\n\\}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);