"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[64378],{64670:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"auto-docs/models_organization_org_info/OrgInfoAdapter/operator_equals","title":"operator == method","description":"- @override","source":"@site/docs/auto-docs/models_organization_org_info/OrgInfoAdapter/operator_equals.md","sourceDirName":"auto-docs/models_organization_org_info/OrgInfoAdapter","slug":"/auto-docs/models_organization_org_info/OrgInfoAdapter/operator_equals","permalink":"/docs/auto-docs/models_organization_org_info/OrgInfoAdapter/operator_equals","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa/edit/develop/docs/docs/auto-docs/models_organization_org_info/OrgInfoAdapter/operator_equals.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"hashCode property","permalink":"/docs/auto-docs/models_organization_org_info/OrgInfoAdapter/hashCode"},"next":{"title":"read method","permalink":"/docs/auto-docs/models_organization_org_info/OrgInfoAdapter/read"}}');var n=t(74848),a=t(28453);const s={},d="operator == method",i={},l=[{value:"Implementation",id:"implementation",level:2}];function c(e){const o={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"operator--method",children:"operator == method"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:["@",(0,n.jsx)(o.a,{href:"https://api.flutter.dev/flutter/dart-core/override-constant.html",children:"override"})]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.a,{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",children:"bool"})," operator ==\n(",(0,n.jsx)(o.a,{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html",children:"Object"})," other)"]}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.em,{children:(0,n.jsx)("span",{class:"feature",children:"override"})})}),"\n",(0,n.jsx)("p",{children:"The equality operator."}),"\n",(0,n.jsxs)("p",{children:["The default behavior for all ",(0,n.jsx)("a",{href:"https://api.flutter.dev/flutter/dart-core/Object-class.html",children:"Object"}),"s is to return true if and\nonly if this object and ",(0,n.jsx)(o.code,{children:"dartother"})," are the same object."]}),"\n",(0,n.jsx)("p",{children:"Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:"}),"\n",(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("p",{children:"Total: It must return a boolean for all arguments. It should never throw."})}),(0,n.jsx)("li",{children:(0,n.jsxs)("p",{children:["Reflexive: For all objects ",(0,n.jsx)(o.code,{children:"darto"}),", ",(0,n.jsx)(o.code,{children:"darto == o"})," must be true."]})}),(0,n.jsx)("li",{children:(0,n.jsxs)("p",{children:["Symmetric: For all objects ",(0,n.jsx)(o.code,{children:"darto1"})," and ",(0,n.jsx)(o.code,{children:"darto2"}),", ",(0,n.jsx)(o.code,{children:"darto1 == o2"})," and ",(0,n.jsx)(o.code,{children:"darto2 == o1"})," must\neither both be true, or both be false."]})}),(0,n.jsx)("li",{children:(0,n.jsxs)("p",{children:["Transitive: For all objects ",(0,n.jsx)(o.code,{children:"darto1"}),", ",(0,n.jsx)(o.code,{children:"darto2"}),", and ",(0,n.jsx)(o.code,{children:"darto3"}),", if ",(0,n.jsx)(o.code,{children:"darto1 == o2"})," and\n",(0,n.jsx)(o.code,{children:"darto2 == o3"})," are true, then ",(0,n.jsx)(o.code,{children:"darto1 == o3"})," must be true."]})})]}),"\n",(0,n.jsx)("p",{children:"The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified."}),"\n",(0,n.jsxs)("p",{children:["If a subclass overrides the equality operator, it should override\nthe ",(0,n.jsx)("a",{href:"../../models_organization_org_info/OrgInfoAdapter/hashCode.md",children:"hashCode"})," method as well to maintain consistency."]}),"\n",(0,n.jsx)(o.h2,{id:"implementation",children:"Implementation"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-dart",children:"@override\nbool operator ==(Object other) =>\n    identical(this, other) ||\n    other is OrgInfoAdapter &&\n        runtimeType == other.runtimeType &&\n        typeId == other.typeId;\n"})})]})}function h(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>d});var r=t(96540);const n={},a=r.createContext(n);function s(e){const o=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:o},e.children)}}}]);